name: Deploy to GitHub Pages and Render.com

on:
  push:
    branches: ["main", "master"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"
      - name: Install dependencies
        run: npm install
      - name: Build
        run: npm run build
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: "./dist"
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1

  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: romanca/docker-vite-gh-pages:latest

  deploy-render:
    runs-on: ubuntu-latest
    needs: docker

    if: success()

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Deploy
        env:
          RENDER_DEPLOY_HOOK_URL: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
        run: |
          curl -X POST "$RENDER_DEPLOY_HOOK_URL"

# sonarqube:
#   runs-on: ubuntu-latest
#   steps:
#     - name: Checkout repository
#       uses: actions/checkout@v2

#     - name: Set up Node.js
#       uses: actions/setup-node@v3
#       with:
#         node-version: 14

#     - name: Install SonarScanner
#       run: |
#         npm install -g sonarqube-scanner

#     - name: Install dependencies
#       run: npm install

#     - name: Run SonarScanner
#       run: sonar-scanner
#       env:
#         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#         SONAR_HOST_URL: http://localhost:9000

# build:
#   name: Build
#   runs-on: ubuntu-latest
#   permissions:
#     contents: read
#     pull-requests: read
#   steps:
#     - uses: actions/checkout@v2
#       with:
#         fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
#     - uses: sonarsource/sonarqube-scan-action@master
#       env:
#         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#         SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
#     # If you wish to fail your job when the Quality Gate is red, uncomment the
#     # following lines. This would typically be used to fail a deployment.
#     - uses: sonarsource/sonarqube-quality-gate-action@master
#       timeout-minutes: 5
#       env:
#         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

# name: Deploy to GitHub Pages

# on:
#   push:
#     branches: ["main", "master"]
#   workflow_dispatch:

# permissions:
#   contents: read
#   pages: write
#   id-token: write

# concurrency:
#   group: "pages"
#   cancel-in-progress: true

# jobs:
#   deploy:
#     environment:
#       name: github-pages
#       url: ${{ steps.deployment.outputs.page_url }}
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3
#       - name: Set up Node
#         uses: actions/setup-node@v3
#         with:
#           node-version: 18
#           cache: "npm"
#       - name: Install dependencies
#         run: npm install
#       - name: Build
#         run: npm run build
#       - name: Setup Pages
#         uses: actions/configure-pages@v3
#       - name: Upload artifact
#         uses: actions/upload-pages-artifact@v1
#         with:
#           path: "./dist"
#       - name: Deploy to GitHub Pages
#         id: deployment
#         uses: actions/deploy-pages@v1

#   docker:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Set up QEMU
#         uses: docker/setup-qemu-action@v2
#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v2
#       - name: Login to Docker Hub
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKER_HUB_USERNAME }}
#           password: ${{ secrets.DOCKER_HUB_TOKEN }}
#       - name: Build and push
#         uses: docker/build-push-action@v4
#         with:
#           push: true
#           tags: romanca/docker-vite-gh-pages:latest
